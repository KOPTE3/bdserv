-- MySQL Script generated by MySQL Workbench
-- 05/24/16 01:38:16
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tech_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tech_db` ;

-- -----------------------------------------------------
-- Schema tech_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tech_db` DEFAULT CHARACTER SET utf8 ;
USE `tech_db` ;

-- -----------------------------------------------------
-- Table `tech_db`.`for`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tech_db`.`for` ;

CREATE TABLE IF NOT EXISTS `tech_db`.`for` (
  `name` VARCHAR(255) NOT NULL,
  `shortname` VARCHAR(255) NOT NULL,
  `user` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`shortname`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `shortname_UNIQUE` ON `tech_db`.`for` (`shortname` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `tech_db`.`for` (`name` ASC);


-- -----------------------------------------------------
-- Table `tech_db`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tech_db`.`user` ;

CREATE TABLE IF NOT EXISTS `tech_db`.`user` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(255) NULL,
  `username` VARCHAR(255) NULL,
  `about` MEDIUMTEXT NULL,
  `isAnonymous` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `tech_db`.`user` (`id` ASC);


-- -----------------------------------------------------
-- Table `tech_db`.`thread`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tech_db`.`thread` ;

CREATE TABLE IF NOT EXISTS `tech_db`.`thread` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `forum` VARCHAR(255) NOT NULL,
  `user` VARCHAR(50) NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `slug` VARCHAR(255) NOT NULL,
  `day` VARCHAR(20) NOT NULL,
  `msg` MEDIUMTEXT NOT NULL,
  `isClosed` TINYINT(1) NOT NULL DEFAULT 0,
  `isDeleted` TINYINT(1) NOT NULL DEFAULT 0,
  `likes` INT UNSIGNED NOT NULL DEFAULT 0,
  `dislikes` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `tech_db`.`thread` (`id` ASC);


-- -----------------------------------------------------
-- Table `tech_db`.`post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tech_db`.`post` ;

CREATE TABLE IF NOT EXISTS `tech_db`.`post` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `parent` INT NULL,
  `thread` INT UNSIGNED NOT NULL,
  `user` VARCHAR(50) NOT NULL,
  `forum` VARCHAR(255) NOT NULL,
  `path` VARCHAR(255) NULL,
  `day` VARCHAR(20) NOT NULL,
  `msg` MEDIUMTEXT NOT NULL,
  `isApproved` TINYINT(1) NOT NULL DEFAULT 0,
  `isDeleted` TINYINT(1) NOT NULL DEFAULT 0,
  `isEdited` TINYINT(1) NOT NULL DEFAULT 0,
  `isHighlighted` TINYINT(1) NOT NULL DEFAULT 0,
  `isSpam` TINYINT(1) NOT NULL DEFAULT 0,
  `likes` INT UNSIGNED NOT NULL DEFAULT 0,
  `dislikes` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idPost_UNIQUE` ON `tech_db`.`post` (`id` ASC);


-- -----------------------------------------------------
-- Table `tech_db`.`fol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tech_db`.`fol` ;

CREATE TABLE IF NOT EXISTS `tech_db`.`fol` (
  `ktoId` VARCHAR(50) NOT NULL,
  `kogoId` VARCHAR(50) NOT NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tech_db`.`sub`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tech_db`.`sub` ;

CREATE TABLE IF NOT EXISTS `tech_db`.`sub` (
  `user` VARCHAR(50) NOT NULL,
  `thread` INT UNSIGNED NOT NULL)
ENGINE = InnoDB;

USE `tech_db`;

DELIMITER $$

USE `tech_db`$$
DROP TRIGGER IF EXISTS `tech_db`.`thread_AFTER_UPDATE` $$
USE `tech_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tech_db`.`thread_AFTER_UPDATE` AFTER UPDATE ON `thread` FOR EACH ROW
BEGIN
UPDATE `post` SET `post`.`isDeleted` = NEW.`isDeleted` WHERE `post`.`thread` = NEW.`id`;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
